version: '3.8'

services:
  ocr-backend:
    build: .
    container_name: ocr-backend-api
    ports:
      - "8000:8000"
    environment:
      # Application Settings
      - APP_ENV=production
      - DEBUG=False
      - PROJECT_NAME=OCR Backend API
      - LOG_LEVEL=INFO
      
      # Server Settings
      - HOST=0.0.0.0
      - PORT=8000
      
      # Directory Settings (all within container)
      - UPLOAD_DIR=/app/uploads
      - RESULTS_DIR=/app/results
      - TEMP_DIR=/app/tmp
      - LOG_FILE=/app/logs/ocr-backend.log
      
      # External OCR API Settings
      - EXTERNAL_OCR_BASE_URL=http://203.185.131.205/vision-world
      - EXTERNAL_OCR_ENDPOINT=/process-image
      - EXTERNAL_OCR_TIMEOUT=30
      
      # OCR LLM API Settings
      - OCR_LLM_BASE_URL=http://203.185.131.205/pathumma-vision-ocr
      - OCR_LLM_ENDPOINT=/v1/chat/completions
      - OCR_LLM_TIMEOUT=60
      - OCR_LLM_MODEL=nectec/Pathumma-vision-ocr-lora-dev
      - OCR_LLM_DEFAULT_PROMPT=ข้อความในภาพนี้
      
      # Image Scaling Settings
      - MAX_IMAGE_PIXELS=3000000
      - IMAGE_SCALING_QUALITY=95
      - IMAGE_SCALING_RESAMPLE=LANCZOS
      - ENABLE_IMAGE_SCALING=True
      
      # PDF Processing Settings
      - MAX_PDF_SIZE=52428800
      - MAX_PDF_PAGES=10
      - PDF_DPI=300
      - PDF_BATCH_SIZE=3
      
      # Processing Settings
      - MAX_CONCURRENT_TASKS=5
      - TASK_TIMEOUT=300
      - CLEANUP_INTERVAL=3600
    
    volumes:
      # Mount directories for persistence and debugging with timestamp isolation
      - ./data/${TIMESTAMP:-default}/uploads:/app/uploads
      - ./data/${TIMESTAMP:-default}/results:/app/results
      - ./data/${TIMESTAMP:-default}/tmp:/app/tmp
      - ./data/${TIMESTAMP:-default}/logs:/app/logs
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Add a nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: ocr-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ocr-backend
    restart: unless-stopped
    profiles:
      - production

networks:
  default:
    name: ocr-network 